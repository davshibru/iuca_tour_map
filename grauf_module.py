from collections import deque

from DrawConvas import *


graph = {


    # ground floor

    'g1': ['f0', 'g2'],
    'g2': ['g1', 'g3'],
    'g3': ['g2', 'g4', 'g5'],
    'g4': ['g3'],
    'g5': ['g3'],

    'g6': ['f31', 'g7'],
    'g7': ['g6', 'g8', 'g9'],
    'g8': ['g7'],
    'g9': ['g7', 'g10', 'g12'],
    'g10': ['g9', 'g11', 'g12', 'g13'],
    'g11': ['g10'],
    'g12': ['g9', 'g10'],
    'g13': ['g10', 'g14', 'g15'],
    'g14': ['g13'],
    'g15': ['g13', 'g16', 'g17'],
    'g16': ['g15'],
    'g17': ['g15', 'g18', 'g19'],
    'g18': ['g17'],
    'g19': ['g17', 'g20', 'g21', 'g22'],
    'g20': ['g19'],
    'g21': ['g19'],
    'g22': ['g19', 'g23', 'g24'],
    'g23': ['g22'],
    'g24': ['g22', 'g25', 'g26'],
    'g25': ['g24'],
    'g26': ['g24'],



    # first floor


    'f0': ['f1', 'g1'],
    'f1': ['f0', 'f47'],
    'f2': ['f2', 'f4'],
    'f3': ['f2'],
    'f4': ['f2', 'f48'],
    'f5': ['f4', 'f6'],
    'f6': ['f5'],
    'f7': ['f5', 'f8', 'f9'],
    'f8': ['f7'],
    'f9': ['f7', 'f10', 'f11'],
    'f10': ['f9'],
    'f11': ['f9', 'f12', 'f13'],
    'f13': ['f11', 'f14', 'f17', 'f18'],
    'f14': ['f13', 'f15'],
    'f15': ['f14', 'f16'],
    'f16': ['f15'],
    'f17': ['f13'],
    'f18': ['f13', 'f19'],
    'f19': ['f20', 'f21', 'f23'],
    'f20': ['f19'],
    'f21': ['f19', 'f22', 'f25', 'f26'],
    'f22': ['f21', 'f23', 'f24', 'f26'],
    'f23': ['f19', 'f22', 'f24'],
    'f24': ['f23', 'f22', 'f26'],
    'f25': ['f21', 'f26', 'f27'],
    'f26': ['f21', 'f22', 'f24', 'f25', 'f32'],
    'f27': ['f25', 'f28', 'f29'],
    'f28': ['f27'],
    'f29': ['f27', 'f30', 'f31'],
    'f30': ['f29', 's27'],
    'f31': ['f29', 'g6'],
    'f32': ['f26', 'f33', 'f36'],
    'f33': ['f32', 'f34', 'f34'],
    'f34': ['f33', 'f35'],
    'f35': ['f33', 'f34'],
    'f36': ['f32', 'f37'],
    'f37': ['f36', 'f38'],
    'f38': ['f37', 'f39', 'f40'],
    'f39': ['f38'],
    'f40': ['f38', 'f41', 'f42'],
    'f41': ['f40'],
    'f42': ['f40', 'f43', 'f44'],
    'f43': ['f42'],
    'f44': ['f42', 'f45', 'f46'],
    'f45': ['f44'],
    'f46': ['f44'],
    'f47': ['f1', 's1'],
    'f48': ['f4'],


    # second floor

    's1': ['f47', 's2'],
    's2': ['s1', 's3', 's4'],
    's3': ['s2'],
    's4': ['s2', 's5', 's6'],
    's5': ['s4'],
    's6': ['s4', 's7', 's10'],
    's7': ['s6', 's8'],
    's8': ['s7', 's9'],
    's9': ['s8'],
    's10': ['s6', 's11', 's12'],
    's11': ['s10'],
    's12': ['s10', 's13', 's14'],
    's13': ['s12'],
    's14': ['s12', 's15', 's16', 's17'],
    's15': ['s14'],
    's16': ['s14'],
    's17': ['s14', 's18', 's19'],
    's18': ['s17'],
    's19': ['s17', 's20', 's21'],
    's20': ['s19'],
    's21': ['s19', 's22', 's23'],
    's22': ['s21'],
    's23': ['s21', 's24', 's25'],
    's24': ['s23'],
    's25': ['s23', 's26', 's28', 's29'],
    's26': ['s25', 's27'],
    's27': ['s26', 'f30'],
    's28': ['s25'],
    's29': ['s25', 's30', 's31'],
    's30': ['s29'],
    's31': ['s29', 's32', 's33'],
    's32': ['s31'],
    's33': ['s31', 's34', 's35', 's36'],
    's34': ['s33'],
    's35': ['s33'],
    's36': ['s33', 's37', 's38', 's39'],
    's37': ['s36'],
    's38': ['s38'],
    's39': ['s36', 's40', 's41', 's42'],
    's40': ['s39'],
    's41': ['s39'],
    's42': ['s39', 's43', 's44', 's45'],
    's43': ['s42'],
    's44': ['s42'],
    's45': ['s42', 's46', 's49'],
    's46': ['s45'],
    's47': ['s49'],
    's48': ['s49'],
    's49': ['s45', 's47', 's48'],

}

def bfs(start, goal, qraph):
    queue = deque([start])
    visited = {start: None}

    while queue:
        cur_node = queue.popleft()
        if cur_node == goal:
            break

        next_nodes = graph[cur_node]
        for next_node in next_nodes:
            if next_node not in visited:
                queue.append(next_node)
                visited[next_node] = cur_node

    return visited


def getPath(goal, start):

    viseted = bfs(start, goal, graph)
    cur_node = goal

    print(f'path from {goal} to {start}: \n {goal}', end='')

    way = []
    way.append(goal)

    while cur_node != start:
        cur_node = viseted[cur_node]
        way.append(cur_node)
        print(f' ---> {cur_node} ', end='')

    #print(f'\n{way}')

    draw_by_points(way)

